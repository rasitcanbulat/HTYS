@model Musteri

@{
    ViewData["Title"] = "Müşteri Ekle";
    Layout = null;
}

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" />
    <style>
        :root {
            --halkbank-blue: #005baa;
            --halkbank-light-blue: #e6f0fa;
            --halkbank-green: #28a745;
            --halkbank-gray: #f0f2f5;
            --halkbank-red: #dc3545;
        }

        body {
            margin: 0;
            font-family: 'Segoe UI', sans-serif;
            background-color: var(--halkbank-gray);
        }

        .top-bar {
            background-color: var(--halkbank-blue);
            color: white;
            padding: 10px 25px;
            display: grid;
            grid-template-columns: 1fr auto 1fr;
            align-items: center;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .top-bar-left, .top-bar-right {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .top-bar-left {
            justify-self: start;
        }

        .top-bar-center {
            justify-self: center;
        }

        .top-bar-right {
            justify-self: end;
        }

        .page-title {
            font-size: 1.25em;
            font-weight: 600;
        }

        .icon-button {
            background: none;
            border: none;
            color: white;
            font-size: 1.5em;
            cursor: pointer;
            text-decoration: none;
        }

        .main-content {
            padding: 25px;
            max-width: 1200px;
            margin: auto;
        }

        .form-container {
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        }

        .form-header {
            background-color: var(--halkbank-blue);
            color: white;
            padding: 15px;
            text-align: center;
            font-size: 1.1em;
            font-weight: 600;
            border-radius: 8px 8px 0 0;
        }

        .form-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
            gap: 20px;
            padding: 25px;
        }

        .form-column h3 {
            font-size: 1.1em;
            font-weight: 600;
            color: var(--halkbank-blue);
            border-bottom: 2px solid var(--halkbank-gray);
            padding-bottom: 10px;
            margin-top: 0;
            margin-bottom: 20px;
        }

        .form-group {
            margin-bottom: 1rem;
        }

            .form-group label {
                display: block;
                margin-bottom: .5rem;
                font-weight: 500;
                font-size: 0.9em;
            }

            .form-group input, .form-group select {
                width: 100%;
                padding: 10px;
                border: 1px solid #ccc;
                border-radius: 5px;
                box-sizing: border-box;
                transition: border-color 0.2s;
            }

                .form-group input:focus, .form-group select:focus {
                    border-color: var(--halkbank-blue);
                    outline: none;
                }

        .form-actions {
            text-align: right;
            margin-top: 20px;
            padding: 20px;
            border-top: 1px solid var(--halkbank-gray);
        }

        .save-button {
            background-color: var(--halkbank-green);
            color: white;
            padding: 12px 30px;
            border-radius: 5px;
            border: none;
            font-weight: 600;
            cursor: pointer;
            font-size: 1em;
        }

        .text-danger {
            color: var(--halkbank-red);
            font-size: 0.875em;
            margin-top: 4px;
            display: block;
            min-height: 1em;
        }

        .radio-button-group {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }

            .radio-button-group input[type="radio"] {
                opacity: 0;
                position: fixed;
                width: 0;
            }

            .radio-button-group label {
                display: inline-block;
                background-color: var(--halkbank-light-blue);
                padding: 10px 20px;
                border-radius: 5px;
                border: 1px solid #b3c6e0;
                cursor: pointer;
                transition: all 0.2s ease;
            }

            .radio-button-group input[type="radio"]:checked + label {
                background-color: var(--halkbank-blue);
                color: white;
                border-color: var(--halkbank-blue);
            }

        .checkbox-group {
            display: flex;
            align-items: center;
            padding: 10px;
            background-color: var(--halkbank-light-blue);
            border-radius: 5px;
        }

            .checkbox-group input {
                height: 1.2em;
                width: 1.2em;
            }

            .checkbox-group label {
                margin-left: 10px;
                font-weight: 600;
                color: var(--halkbank-blue);
            }

        .loading-overlay {
            position: fixed;
            display: none;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            background-color: rgba(0, 0, 0, 0.6);
            z-index: 9999;
            cursor: progress;
            justify-content: center;
            align-items: center;
            flex-direction: column;
        }

        .loading-spinner {
            border: 8px solid #f3f3f3;
            border-top: 8px solid var(--halkbank-blue);
            border-radius: 50%;
            width: 60px;
            height: 60px;
            animation: spin 1.5s linear infinite;
        }

        .loading-text {
            color: white;
            margin-top: 20px;
            font-size: 1.2em;
            font-weight: 600;
        }

        @@keyframes spin {
            0% {
                transform: rotate(0deg);
            }

            100% {
                transform: rotate(360deg);
            }
        }
    </style>
</head>
<body>
    <header class="top-bar">
        <div class="top-bar-left">
            <a asp-action="Index" asp-controller="Musteri" class="icon-button" title="Müşteri Listesine Dön"><i class="fas fa-arrow-left"></i></a>
            <h1 class="page-title">Müşteri Ekle</h1>
        </div>
        <div class="top-bar-center">
            <a asp-controller="BankaPanel" asp-action="Index">
                <img src="~/img/halkbank-logo.png" alt="Halkbank Logo" style="height: 45px;" />
            </a>
        </div>
        <div class="top-bar-right">
            <a asp-action="Login" asp-controller="Account" class="icon-button" title="Çıkış Yap"><i class="fas fa-sign-out-alt"></i></a>
        </div>
    </header>

    <main class="main-content">
        <form asp-action="Create" method="post" class="form-container" onsubmit="return formuDogrulaVeGonder(event)">
            @Html.AntiForgeryToken()
            <div class="form-header">MÜŞTERİ EKLE</div>
            <div class="form-grid">
                <div class="form-column">
                    <h3>KİŞİSEL BİLGİLER</h3>
                    <div class="form-group"><label asp-for="MusteriNo"></label><input asp-for="MusteriNo" id="musteriNoInput" oninput="musteriNoDogrula()" /><span id="musteriNoError" class="text-danger"></span></div>
                    <div class="form-group"><label asp-for="Ad"></label><input asp-for="Ad" id="adInput" oninput="adDogrula()" /><span id="adError" class="text-danger"></span></div>
                    <div class="form-group"><label asp-for="Soyad"></label><input asp-for="Soyad" id="soyadInput" oninput="soyadDogrula()" /><span id="soyadError" class="text-danger"></span></div>
                    <div class="form-group"><label asp-for="TCKN"></label><input asp-for="TCKN" id="tcknInput" oninput="tcknDogrula()" /><span id="tcknError" class="text-danger"></span></div>
                    <div class="form-group"><label asp-for="DogumTarihi"></label><input asp-for="DogumTarihi" type="date" /></div>
                    <div class="form-group"><label asp-for="DogumYeri"></label><input asp-for="DogumYeri" id="dogumYeriInput" oninput="dogumYeriDogrula()" /><span id="dogumYeriError" class="text-danger"></span></div>
                    <div class="form-group"><label asp-for="Cinsiyet"></label><div class="radio-button-group"><input type="radio" name="Cinsiyet" value="Erkek" id="cinsiyetErkek" onchange="cinsiyetDogrula()" /><label for="cinsiyetErkek">Erkek</label><input type="radio" name="Cinsiyet" value="Kadın" id="cinsiyetKadin" onchange="cinsiyetDogrula()" /><label for="cinsiyetKadin">Kadın</label></div><span id="cinsiyetError" class="text-danger"></span></div>
                    <div class="form-group"><label asp-for="MedeniDurum"></label><div class="radio-button-group"><input type="radio" name="MedeniDurum" value="Bekar" id="medeniBekar" onchange="medeniDurumDogrula()" /><label for="medeniBekar">Bekar</label><input type="radio" name="MedeniDurum" value="Evli" id="medeniEvli" onchange="medeniDurumDogrula()" /><label for="medeniEvli">Evli</label><input type="radio" name="MedeniDurum" value="Dul" id="medeniDul" onchange="medeniDurumDogrula()" /><label for="medeniDul">Dul</label></div><span id="medeniDurumError" class="text-danger"></span></div>
                </div>

                <div class="form-column">
                    <h3>NÜFUS & KİMLİK BİLGİLERİ</h3>
                    <div class="form-group"><label asp-for="BabaAdi"></label><input asp-for="BabaAdi" id="babaAdInput" oninput="babaAdDogrula()" /><span id="babaAdError" class="text-danger"></span></div>
                    <div class="form-group"><label asp-for="AnneAdi"></label><input asp-for="AnneAdi" id="anneAdInput" oninput="anneAdDogrula()" /><span id="anneAdError" class="text-danger"></span></div>
                    <div class="form-group"><label asp-for="PasaportNo"></label><input asp-for="PasaportNo" id="pasaportNoInput" oninput="pasaportNoDogrula()" /><span id="pasaportNoError" class="text-danger"></span></div>
                    <div class="form-group"><label asp-for="NufusaKayitliIl"></label><input asp-for="NufusaKayitliIl" id="nufusIlInput" oninput="nufusIlDogrula()" /><span id="nufusIlError" class="text-danger"></span></div>
                    <div class="form-group"><label asp-for="CiltNo"></label><input asp-for="CiltNo" id="ciltNoInput" oninput="ciltNoDogrula()" /><span id="ciltNoError" class="text-danger"></span></div>
                    <div class="form-group"><label asp-for="AileSiraNo"></label><input asp-for="AileSiraNo" id="aileSiraNoInput" oninput="aileSiraNoDogrula()" /><span id="aileSiraNoError" class="text-danger"></span></div>
                    <div class="form-group"><label asp-for="KutukSiraNo"></label><input asp-for="KutukSiraNo" id="kutukSiraNoInput" oninput="kutukSiraNoDogrula()" /><span id="kutukSiraNoError" class="text-danger"></span></div>
                </div>

                <div class="form-column">
                    <h3>ADRES & EK BİLGİLER</h3>
                    <div class="form-group"><label asp-for="Sehir"></label><select id="sehir" asp-for="Sehir"><option value="">İl Seçiniz</option></select></div>
                    <div class="form-group"><label asp-for="Ilce"></label><select id="ilce" asp-for="Ilce" disabled><option value="">Önce İl Seçiniz</option></select></div>
                    <div class="form-group"><label asp-for="Semt"></label><input asp-for="Semt" placeholder="Semt veya Mahalle giriniz" id="semtInput" oninput="semtDogrula()" /><span id="semtError" class="text-danger"></span></div>
                    <div class="form-group"><label asp-for="AdresDetay"></label><input asp-for="AdresDetay" placeholder="Cadde, sokak, no vb." /></div>
                    <div class="form-group"><label asp-for="VergiDairesi"></label><input asp-for="VergiDairesi" id="vergiDairesiInput" oninput="vergiDairesiDogrula()" /> <span id="vergiDairesiError" class="text-danger"></span></div>
                    <div class="form-group"><label asp-for="VergiNo"></label><input asp-for="VergiNo" id="vergiNoInput" oninput="vergiNoDogrula()" /><span id="vergiNoError" class="text-danger"></span></div>
                    <div class="form-group checkbox-group"><input class="form-check-input" type="checkbox" asp-for="HayattaMi" /><label asp-for="HayattaMi"></label></div>
                </div>
            </div>
            <div class="form-actions">
                <button type="submit" class="save-button"><i class="fas fa-save"></i> Müşteriyi Kaydet</button>
            </div>
        </form>
    </main>

    <div id="loadingOverlay" class="loading-overlay">
        <div class="loading-spinner"></div>
        <p class="loading-text">İsteğiniz gerçekleştiriliyor, lütfen bekleyin...</p>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', async function () {
            const sehirSelect = document.getElementById('sehir');
            const ilceSelect = document.getElementById('ilce');
            const ilResponse = await fetch('/Adres/GetIller');
            const iller = await ilResponse.json();
            iller.forEach(il => {
                sehirSelect.add(new Option(il.ad, il.ad));
            });
            sehirSelect.addEventListener('change', async function () {
                const secilenIlAdi = this.value;
                ilceSelect.innerHTML = '<option value="">Yükleniyor...</option>';
                ilceSelect.disabled = true;
                if (secilenIlAdi) {
                    const secilenIl = iller.find(i => i.ad === secilenIlAdi);
                    if (secilenIl) {
                        const ilceResponse = await fetch(`/Adres/GetIlceler?ilId=${secilenIl.id}`);
                        const data = await ilceResponse.json();
                        ilceSelect.innerHTML = '<option value="">İlçe Seçiniz</option>';
                        data.forEach(ilce => {
                            ilceSelect.add(new Option(ilce.ad, ilce.ad));
                        });
                        ilceSelect.disabled = false;
                    }
                } else {
                    ilceSelect.innerHTML = '<option value="">Önce İl Seçiniz</option>';
                }
            });
        });

        function formuDogrulaVeGonder(event) {
            musteriNoDogrula();
            adDogrula();
            soyadDogrula();
            anneAdDogrula();
            babaAdDogrula();
            tcknDogrula();
            dogumYeriDogrula();
            cinsiyetDogrula();
            medeniDurumDogrula();
            pasaportNoDogrula();
            nufusIlDogrula();
            ciltNoDogrula();
            aileSiraNoDogrula();
            kutukSiraNoDogrula();
            semtDogrula();
            vergiDairesiDogrula();
            vergiNoDogrula();

            const form = event.target;
            const errorSpans = form.querySelectorAll('.text-danger');
            let formGecerli = true;
            errorSpans.forEach(span => {
                if (span.textContent.trim() !== '') {
                    formGecerli = false;
                }
            });

            if (!formGecerli) {
                event.preventDefault();
                alert('Lütfen formdaki kırmızı ile belirtilen zorunlu veya hatalı alanları düzeltin.');
                return false;
            } else {
                const overlay = document.getElementById('loadingOverlay');
                overlay.style.display = 'flex';
                const submitButton = form.querySelector('button[type="submit"]');
                submitButton.disabled = true;
                return true;
            }
        }

        // DOĞRULAMA

        function musteriNoDogrula() {
            const input = document.getElementById('musteriNoInput');
            const error = document.getElementById('musteriNoError');
            let message = '';
            if (!input.value) {
                message = 'Müşteri Numarası zorunludur.';
            } else if (!/^[0-9]+$/.test(input.value)) {
                message = 'Müşteri Numarası sadece rakamlardan oluşmalıdır.';
            }
            error.textContent = message;
        }

        function adDogrula() {
            const input = document.getElementById('adInput');
            const error = document.getElementById('adError');
            const harfRegex = /^[a-zA-ZçÇğĞıİöÖşŞüÜ ]+$/;
            let message = '';
            if (!input.value) {
                message = 'Ad alanı zorunludur.';
            } else if (!harfRegex.test(input.value)) {
                message = 'Ad alanına özel karakter veya rakam giremezsiniz.';
            }
            error.textContent = message;
        }

        function babaAdDogrula() {
            const input = document.getElementById('babaAdInput')
            const error = document.getElementById('babaAdError')
            const harfRegex = /^[a-zA-ZçÇğĞıİöÖşŞüÜ ]+$/;

            let message = '';
            if (!input.value) {
                message = 'Baba adı zorunludur.';
            } else if (!harfRegex.test(input.value)) {
                message = 'Baba adı özel karakter veya rakam giremezsiniz.';
            } else if (input.value.length > 30) {
                message = 'Baba adı en fazla 30 karakter olabilir.';
            }
            error.textContent = message;
        }

        function anneAdDogrula() {
            const input = document.getElementById('anneAdInput')
            const error = document.getElementById('anneAdError')
            const harfRegex = /^[a-zA-ZçÇğĞıİöÖşŞüÜ ]+$/;

            let message = '';
            if (!input.value) {
                message = 'Anne adı zorunludur.';
            } else if (!harfRegex.test(input.value)) {
                message = 'Anne adı özel karakter veya rakam giremezsiniz.';
            } else if (input.value.length > 30) {
                message = 'Anne adı en fazla 30 karakter olabilir.';
            }
            error.textContent = message;
        }

        function soyadDogrula() {
            const input = document.getElementById('soyadInput');
            const error = document.getElementById('soyadError');
            const harfRegex = /^[a-zA-ZçÇğĞıİöÖşŞüÜ ]+$/;
            let message = '';
            if (!input.value) {
                message = 'Soyad alanı zorunludur.';
            } else if (!harfRegex.test(input.value)) {
                message = 'Soyad alanına özel karakter veya rakam giremezsiniz.';
            } else if (input.value.length > 50) {
                message = 'Soyad en fazla 50 karakter olabilir.';
            }
            error.textContent = message;
        }

        function tcknDogrula() {
            const input = document.getElementById('tcknInput');
            const error = document.getElementById('tcknError');
            let message = '';
            if (!input.value) {
                message = 'TCKN zorunludur.';
            } else if (!/^[0-9]+$/.test(input.value)) {
                message = 'TCKN sadece rakamlardan oluşmalıdır.';
            } else if (input.value.length !== 11) {
                message = 'TCKN 11 haneli olmalıdır.';
            }
            error.textContent = message;
        }

        function dogumYeriDogrula() {
            const input = document.getElementById('dogumYeriInput');
            const error = document.getElementById('dogumYeriError');
            const harfRegex = /^[a-zA-ZçÇğĞıİöÖşŞüÜ ]+$/;

            let message = '';
            if (!input.value) {
                message = 'Doğum yeri zorunludur.'
            } else if (!harfRegex.test(input.value)) {
                message = 'Doğum yerine özel karakter veya rakam giremezsiniz.';
            }
            error.textContent = message;
        }

        function cinsiyetDogrula() {
            const error = document.getElementById('cinsiyetError');
            if (!document.querySelector('input[name="Cinsiyet"]:checked')) {
                error.textContent = 'Cinsiyet seçimi zorunludur.';
            } else {
                error.textContent = '';
            }
        }

        function medeniDurumDogrula() {
            const error = document.getElementById('medeniDurumError');
            if (!document.querySelector('input[name="MedeniDurum"]:checked')) {
                error.textContent = 'Medeni durum seçimi zorunludur.';
            } else {
                error.textContent = '';
            }
        }

        function pasaportNoDogrula() {
            const input = document.getElementById('pasaportNoInput');
            const error = document.getElementById('pasaportNoError');
            const num = /^[0-9]+$/;

            let message = '';
            if (!input.value) {
                message = 'Pasaport numarası zorunludur.'
            } else if (input.value && input.value.length > 8) {
                message = 'Pasaport No en fazla 8 karakter olabilir.';
            } else if (!num.test(input.value)) {
                message = 'Pasaport numarasına özel karakter veya harf giremezsiniz.';
            }
            error.textContent = message;
        }

        function nufusIlDogrula() {
            const input = document.getElementById('nufusIlInput');
            const error = document.getElementById('nufusIlError');
            const harfRegex = /^[a-zA-ZçÇğĞıİöÖşŞüÜ ]+$/;

            let message = '';
            if (!input.value) {
                message = 'Nüfusa kayıtlı il zorunludur.'
            } else if (input.value && input.value.length > 30) {
                message = 'Nüfusa kayıtlı il en fazla 30 karakter olabilir.';
            } else if (!harfRegex.test(input.value)) {
                message = 'Nüfusa kayıtlı il özel karakter veya rakam içeremez.';
            }
            error.textContent = message;
        }

        function ciltNoDogrula() {
            const input = document.getElementById('ciltNoInput');
            const error = document.getElementById('ciltNoError');
            let message = '';
            if (input.value) {
                if (!/^[0-9]+$/.test(input.value)) {
                    message = 'Lütfen sadece sayı giriniz.';
                } else if (input.value.length > 2) {
                    message = 'Cilt No en fazla 2 karakter olabilir.';
                }
            }
            error.textContent = message;
        }

        function aileSiraNoDogrula() {
            const input = document.getElementById('aileSiraNoInput');
            const error = document.getElementById('aileSiraNoError');
            let message = '';
            if (input.value) {
                if (!/^[0-9]+$/.test(input.value)) {
                    message = 'Lütfen sadece sayı giriniz.';
                } else if (input.value.length > 3) {
                    message = 'Aile Sıra No en fazla 3 karakter olabilir.';
                }
            }
            error.textContent = message;
        }

        function kutukSiraNoDogrula() {
            const input = document.getElementById('kutukSiraNoInput');
            const error = document.getElementById('kutukSiraNoError');
            let message = '';
            if (input.value) {
                if (!/^[0-9]+$/.test(input.value)) {
                    message = 'Lütfen sadece sayı giriniz.';
                } else if (input.value.length > 3) {
                    message = 'Kütük Sıra No en fazla 3 karakter olabilir.';
                }
            }
            error.textContent = message;
        }

        function semtDogrula() {
            const input = document.getElementById('semtInput');
            const error = document.getElementById('semtError');
            const harfRegex = /^[a-zA-ZçÇğĞıİöÖşŞüÜ]+$/;

            let message = '';
            if (!input.value) {
                message = 'Semt / Mahalle zorunludur.'
            } else if (input.value && input.value.length > 50) {
                message = 'Semt / Mahalle en fazla 50 karakter olabilir.';
            } else if (!harfRegex.test(input.value)) {
                message = 'Semt / Mahalle özel karakter veya rakam içeremez.';
            }
            error.textContent = message;
        }

        function vergiDairesiDogrula() {
            const input = document.getElementById('vergiDairesiInput');
            const error = document.getElementById('vergiDairesiError');
            const harfRegex = /^[a-zA-ZçÇğĞıİöÖşŞüÜ]+$/;

            let message = '';
            if (!input.value) {
                message = 'Vergi Dairesi zorunludur.'
            } else if (input.value && input.value.length > 30) {
                message = 'Vergi Dairesi en fazla 30 karakter olabilir.';
            } else if (!harfRegex.test(input.value)) {
                message = 'Vergi Dairesi özel karakter veya rakam içeremez.';
            }
            error.textContent = message;
        }

        function vergiNoDogrula() {
            const input = document.getElementById('vergiNoInput');
            const error = document.getElementById('vergiNoError');
            let message = '';
            if (input.value) {
                if (!/^[0-9]+$/.test(input.value)) {
                    message = 'Vergi Numarası sadece rakamlardan oluşmalıdır.';
                } else if (input.value.length > 8) {
                    message = 'Vergi No en fazla 8 karakter olabilir.';
                }
            }
            error.textContent = message;
        }
    </script>
</body>
</html>
