@model Avukat

@{
    ViewData["Title"] = "Avukat Bilgilerini Güncelle";
    Layout = null;
}

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" />
    <style>
        :root {
            --halkbank-blue: #005baa;
            --halkbank-light-blue: #e6f0fa;
            --halkbank-yellow: #ffc107;
            --halkbank-gray: #f0f2f5;
        }

        body {
            margin: 0;
            font-family: 'Segoe UI', sans-serif;
            background-color: var(--halkbank-gray);
        }

        .top-bar {
            background-color: var(--halkbank-blue);
            color: white;
            padding: 10px 25px;
            display: grid;
            grid-template-columns: 1fr auto 1fr;
            align-items: center;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .top-bar-left, .top-bar-right {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .top-bar-left {
            justify-self: start;
        }

        .top-bar-center {
            justify-self: center;
        }

        .top-bar-right {
            justify-self: end;
        }

        .page-title {
            font-size: 1.25em;
            font-weight: 600;
        }

        .icon-button {
            background: none;
            border: none;
            color: white;
            font-size: 1.5em;
            cursor: pointer;
            text-decoration: none;
        }

        .main-content {
            padding: 25px;
            max-width: 1200px;
            margin: auto;
        }

        .form-container {
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        }

        .form-header {
            background-color: var(--halkbank-blue);
            color: white;
            padding: 15px;
            text-align: center;
            font-size: 1.1em;
            font-weight: 600;
            border-radius: 8px 8px 0 0;
        }

        .form-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
            gap: 20px;
            padding: 25px;
        }

        .form-column h3 {
            font-size: 1.1em;
            font-weight: 600;
            color: var(--halkbank-blue);
            border-bottom: 2px solid var(--halkbank-gray);
            padding-bottom: 10px;
            margin-top: 0;
            margin-bottom: 20px;
        }

        .form-group {
            margin-bottom: 1rem;
        }

            .form-group label {
                display: block;
                margin-bottom: .5rem;
                font-weight: 500;
                font-size: 0.9em;
            }

            .form-group input, .form-group select {
                width: 100%;
                padding: 10px;
                border: 1px solid #ccc;
                border-radius: 5px;
                box-sizing: border-box;
                transition: border-color 0.2s;
            }

                .form-group input:focus, .form-group select:focus {
                    border-color: var(--halkbank-blue);
                    outline: none;
                }

        .form-actions {
            text-align: right;
            margin-top: 20px;
            padding: 20px;
            border-top: 1px solid var(--halkbank-gray);
        }

        .save-button {
            background-color: var(--halkbank-yellow);
            color: black;
            padding: 12px 30px;
            border-radius: 5px;
            border: none;
            font-weight: 600;
            cursor: pointer;
            font-size: 1em;
        }

        .text-danger {
            color: #dc3545;
            font-size: 0.875em;
            margin-top: 4px;
        }

        .radio-button-group {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }

            .radio-button-group input[type="radio"] {
                opacity: 0;
                position: fixed;
                width: 0;
            }

            .radio-button-group label {
                display: inline-block;
                background-color: var(--halkbank-light-blue);
                padding: 10px 20px;
                border-radius: 5px;
                border: 1px solid #b3c6e0;
                cursor: pointer;
                transition: all 0.2s ease;
            }

            .radio-button-group input[type="radio"]:checked + label {
                background-color: var(--halkbank-blue);
                color: white;
                border-color: var(--halkbank-blue);
            }

        .checkbox-container {
            display: flex;
            align-items: center;
            padding: 10px;
            background-color: var(--halkbank-light-blue);
            border-radius: 5px;
        }

            .checkbox-container input {
                height: 1.2em;
                width: 1.2em;
            }

            .checkbox-container label {
                margin-left: 10px;
                font-weight: 600;
                color: var(--halkbank-blue);
            }
    </style>
</head>
<body>
    <header class="top-bar">
        <div class="top-bar-left">
            <a asp-action="Index" class="icon-button" title="Avukat Listesine Dön"><i class="fas fa-arrow-left"></i></a>
            <h1 class="page-title">Avukat Güncelle</h1>
        </div>
        <div class="top-bar-center">
            <img src="~/img/halkbank-logo.png" alt="Halkbank Logo" style="height: 45px;" />
        </div>
        <div class="top-bar-right">
            <a asp-action="Login" asp-controller="Account" class="icon-button" title="Çıkış Yap"><i class="fas fa-sign-out-alt"></i></a>
        </div>
    </header>

    <main class="main-content">
        <form asp-action="Edit" method="post" class="form-container">
            @Html.AntiForgeryToken()
            <input type="hidden" asp-for="Id" />
            <div class="form-header">AVUKAT BİLGİLERİNİ GÜNCELLE</div>
            <div class="form-grid">
                <div class="form-column">
                    <h3>KİMLİK BİLGİLERİ</h3>
                    <div class="form-group"><label asp-for="Ad"></label><input asp-for="Ad" id="adInput" oninput="adDogrula()" /><span id="adError" class="text-danger"></span></div>
                    <div class="form-group"><label asp-for="Soyad"></label><input asp-for="Soyad" id="soyadInput" oninput="soyadDogrula()" /><span id="soyadError" class="text-danger"></span></div>
                    <div class="form-group"><label asp-for="TCKN"></label><input asp-for="TCKN" id="tcknInput" oninput="tcknDogrula()" /><span id="tcknError" class="text-danger"></span></div>
                    <div class="form-group"><label asp-for="KullaniciAdi"></label><input asp-for="KullaniciAdi" id="kullaniciAdiInput" oninput="kullaniciAdiDogrula()" /><span id="kullaniciAdiError" class="text-danger"></span></div>
                    <div class="form-group"><label asp-for="VergiDairesi"></label><input asp-for="VergiDairesi" id="vergiDairesiInput" oninput="vergiDairesiDogrula()" /><span id="vergiDairesiError" class="text-danger"></span></div>
                    <div class="form-group"><label asp-for="VergiNo"></label><input asp-for="VergiNo" id="vergiNoInput" oninput="vergiNoDogrula()" /><span id="vergiNoError" class="text-danger"></span></div>
                </div>

                <div class="form-column">
                    <h3>İLETİŞİM BİLGİLERİ</h3>
                    <div class="form-group"><label asp-for="CepTelefonu"></label><input asp-for="CepTelefonu" id="cepTelInput" oninput="telefonDogrula('cepTelInput', 'cepTelError')" placeholder="(5xx) xxx xx xx" /><span id="cepTelError" class="text-danger"></span></div>
                    <div class="form-group"><label asp-for="IsTelefonu"></label><input asp-for="IsTelefonu" id="isTelInput" oninput="telefonDogrula('isTelInput', 'isTelError')" placeholder="(xxx) xxx xx xx" /><span id="isTelError" class="text-danger"></span></div>
                    <div class="form-group"><label asp-for="FaksNo"></label><input asp-for="FaksNo" id="faksNoInput" oninput="telefonDogrula('faksNoInput', 'faksNoError')" placeholder="(xxx) xxx xx xx" /><span id="faksNoError" class="text-danger"></span></div>
                    <div class="form-group"><label asp-for="EmailAdresi"></label><input asp-for="EmailAdresi" id="emailInput" oninput="emailDogrula()" placeholder="ornek@halkbank.com.tr" /><span id="emailError" class="text-danger"></span></div>
                    <div class="form-group"><label asp-for="HalkbankVadesizIBAN"></label><input asp-for="HalkbankVadesizIBAN" id="halkbankIbanInput" oninput="ibanDogrula('halkbankIbanInput', 'halkbankIbanError')" placeholder="TR" /><span id="halkbankIbanError" class="text-danger"></span></div>
                    <div class="form-group"><label asp-for="DigerBankaIBAN"></label><input asp-for="DigerBankaIBAN" id="digerIbanInput" oninput="ibanDogrula('digerIbanInput', 'digerIbanError')" placeholder="TR" /><span id="digerIbanError" class="text-danger"></span></div>
                </div>

                <div class="form-column">
                    <h3>ADRES & AYARLAR</h3>
                    <div class="form-group"><label asp-for="Sehir"></label><select id="sehir" asp-for="Sehir"><option value="">İl Seçiniz</option></select></div>
                    <div class="form-group"><label asp-for="Ilce"></label><select id="ilce" asp-for="Ilce" disabled><option value="">Önce İl Seçiniz</option></select></div>
                    <div class="form-group"><label asp-for="Semt"></label><input asp-for="Semt" id="semtInput" oninput="semtDogrula()" placeholder="Semt veya Mahalle giriniz" /><span id="semtError" class="text-danger"></span></div>
                    <div class="form-group"><label asp-for="TamAdres"></label><input asp-for="TamAdres" placeholder="Cadde, sokak, no vb." /></div>
                    <div class="form-group"><label asp-for="AvukatTipi"></label><div class="radio-button-group"><input type="radio" asp-for="AvukatTipi" value="Sözleşmeli" id="tipSozlesmeli" name="AvukatTipi" onchange="avukatTipiDogrula()" /><label for="tipSozlesmeli">Sözleşmeli</label><input type="radio" asp-for="AvukatTipi" value="Baro" id="tipBaro" name="AvukatTipi" onchange="avukatTipiDogrula()" /><label for="tipBaro">Baro</label></div><span id="avukatTipiError" class="text-danger"></span></div>
                    <div class="form-group checkbox-container"><input type="checkbox" asp-for="HesapAktifMi" /><label asp-for="HesapAktifMi"></label></div>
                </div>
            </div>
            <div class="form-actions">
                <button type="submit" class="save-button"><i class="fas fa-sync-alt"></i> Değişiklikleri Kaydet</button>
            </div>
        </form>
    </main>

    <script>
        document.addEventListener('DOMContentLoaded', async function () {
            const sehirSelect = document.getElementById('sehir');
            const ilceSelect = document.getElementById('ilce');

            const currentSehirAdi = '@Model.Sehir';
            const currentIlceAdi = '@Model.Ilce';

            let illerListesi = [];

            try {
                const ilResponse = await fetch('/Adres/GetIller');
                illerListesi = await ilResponse.json();

                let selectedIlId = null;
                illerListesi.forEach(il => {
                    const option = new Option(il.ad, il.ad);
                    if (il.ad === currentSehirAdi) {
                        option.selected = true;
                        selectedIlId = il.id;
                    }
                    sehirSelect.add(option);
                });

                if (selectedIlId) {
                    ilceSelect.disabled = false;
                    const ilceResponse = await fetch(`/Adres/GetIlceler?ilId=${selectedIlId}`);
                    const ilceler = await ilceResponse.json();

                    ilceSelect.innerHTML = '<option value="">İlçe Seçiniz</option>';
                    ilceler.forEach(ilce => {
                        const option = new Option(ilce.ad, ilce.ad);
                        if (ilce.ad === currentIlceAdi) {
                            option.selected = true;
                        }
                        ilceSelect.add(option);
                    });
                }
            } catch (error) {
                console.error("Adres bilgileri yüklenirken hata oluştu:", error);
            }

            sehirSelect.addEventListener('change', async function () {
                const secilenIlAdi = this.value;
                ilceSelect.innerHTML = '<option value="">Yükleniyor...</option>';
                ilceSelect.disabled = true;

                if (secilenIlAdi) {
                    const secilenIl = illerListesi.find(i => i.ad === secilenIlAdi);
                    if (secilenIl) {
                        try {
                            const ilceResponse = await fetch(`/Adres/GetIlceler?ilId=${secilenIl.id}`);
                            const data = await ilceResponse.json();

                            ilceSelect.innerHTML = '<option value="">İlçe Seçiniz</option>';
                            data.forEach(ilce => {
                                ilceSelect.add(new Option(ilce.ad, ilce.ad));
                            });
                            ilceSelect.disabled = false;
                        } catch (error) {
                            console.error("İlçeler yüklenirken hata oluştu:", error);
                        }
                    }
                } else {
                    ilceSelect.innerHTML = '<option value="">Önce İl Seçiniz</option>';
                }
            });
        });

        // --- ANLIK FORM DOĞRULAMA (CLIENT-SIDE VALIDATION) ---

        function adDogrula() {
            const adInput = document.getElementById('adInput');
            const adError = document.getElementById('adError');
            const adValue = adInput.value;
            const harfRegex = /^[a-zA-ZğüşıöçĞÜŞİÖÇ\s]+$/;

            let hataMesaji = '';
            if (!adValue) {
                hataMesaji = 'Ad alanı zorunludur.';
            } else if (adValue.length > 30) {
                hataMesaji = 'Ad en fazla 30 karakter olabilir.';
            } else if (!harfRegex.test(adValue)) {
                hataMesaji = 'Ad sadece harflerden oluşmalıdır.';
            }
            adError.textContent = hataMesaji;
        }

        function soyadDogrula() {
            const soyadInput = document.getElementById('soyadInput');
            const soyadError = document.getElementById('soyadError');
            const soyadValue = soyadInput.value;
            const harfRegex = /^[a-zA-ZğüşıöçĞÜŞİÖÇ\s]+$/;

            let hataMesaji = '';
            if (!soyadValue) {
                hataMesaji = 'Soyad alanı zorunludur.';
            } else if (soyadValue.length > 50) {
                hataMesaji = 'Soyad en fazla 50 karakter olabilir.';
            } else if (!harfRegex.test(soyadValue)) {
                hataMesaji = 'Soyad sadece harflerden oluşmalıdır.';
            }
            soyadError.textContent = hataMesaji;
        }

        function tcknDogrula() {
            const tcknInput = document.getElementById('tcknInput');
            const tcknError = document.getElementById('tcknError');
            const tcknValue = tcknInput.value;

            let hataMesaji = '';
            if (!tcknValue) {
                hataMesaji = 'TCKN alanı zorunludur.';
            } else if (!/^[0-9]+$/.test(tcknValue)) {
                hataMesaji = 'TCKN sadece rakamlardan oluşmalıdır.';
            } else if (tcknValue.length !== 11) {
                hataMesaji = 'TCKN 11 haneli olmalıdır.';
            }
            tcknError.textContent = hataMesaji;
        }

        function kullaniciAdiDogrula() {
            const input = document.getElementById('kullaniciAdiInput');
            const error = document.getElementById('kullaniciAdiError');
            const value = input.value;

            let hataMesaji = '';
            if (!value) {
                hataMesaji = 'Kullanıcı adı zorunludur.';
            } else if (value.length > 15) {
                hataMesaji = 'Kullanıcı adı en fazla 15 karakter olabilir.';
            }
            error.textContent = hataMesaji;
        }

        function vergiDairesiDogrula() {
            const input = document.getElementById('vergiDairesiInput');
            const error = document.getElementById('vergiDairesiError');
            if (input.value && input.value.length > 30) {
                error.textContent = 'Vergi Dairesi en fazla 30 karakter olabilir.';
            } else {
                error.textContent = '';
            }
        }

        function vergiNoDogrula() {
            const input = document.getElementById('vergiNoInput');
            const error = document.getElementById('vergiNoError');
            const value = input.value;

            let hataMesaji = '';
            if (value) { // Sadece doluysa kontrol et
                if (!/^[0-9]+$/.test(value)) {
                    hataMesaji = 'Vergi No sadece rakamlardan oluşmalıdır.';
                } else if (value.length > 8) {
                    hataMesaji = 'Vergi No en fazla 8 karakter olabilir.';
                }
            }
            error.textContent = hataMesaji;
        }

        function telefonDogrula(inputId, errorId) {
            const input = document.getElementById(inputId);
            const error = document.getElementById(errorId);
            const value = input.value;
            const telefonRegex = /^[0-9\s()+-]*$/;

            let hataMesaji = '';
            if (value && !telefonRegex.test(value)) {
                hataMesaji = 'Geçersiz telefon numarası formatı.';
            }
            error.textContent = hataMesaji;
        }

        function emailDogrula() {
            const input = document.getElementById('emailInput');
            const error = document.getElementById('emailError');
            const value = input.value;
            const emailRegex = /^[\w-\.]+halkbank\.com\.tr$/;

            let hataMesaji = '';
            if (!value) {
                hataMesaji = 'E-mail adresi zorunludur.';
            } else if (!emailRegex.test(value)) {
                hataMesaji = 'Geçersiz e-mail formatı. Adres halkbank.com.tr ile bitmelidir.';
            }
            error.textContent = hataMesaji;
        }

        function ibanDogrula(inputId, errorId) {
            const input = document.getElementById(inputId);
            const error = document.getElementById(errorId);
            const value = input.value.toUpperCase().replace(/\s/g, ''); // Boşlukları kaldır ve büyük harfe çevir

            let hataMesaji = '';
            if (value) { // Sadece doluysa kontrol et
                if (!value.startsWith('TR')) {
                    hataMesaji = "IBAN 'TR' ile başlamalıdır.";
                } else if (value.length !== 26) {
                    hataMesaji = 'IBAN 26 karakter olmalıdır.';
                } else if (!/^[0-9]+$/.test(value.substring(2))) {
                    hataMesaji = "IBAN'ın ilk 2 karakterinden sonrası sadece rakam olmalıdır.";
                }
            }
            error.textContent = hataMesaji;
        }

        function semtDogrula() {
            const input = document.getElementById('semtInput');
            const error = document.getElementById('semtError');
            if (input.value && input.value.length > 50) {
                error.textContent = 'Semt / Mahalle en fazla 50 karakter olabilir.';
            } else {
                error.textContent = '';
            }
        }

        function avukatTipiDogrula() {
            const error = document.getElementById('avukatTipiError');
            const isChecked = document.querySelector('input[name="AvukatTipi"]:checked');
            if (!isChecked) {
                error.textContent = 'Avukat tipi seçimi zorunludur.';
            } else {
                error.textContent = '';
            }
        }
    </script>
</body>
</html>