@model Ihtar

@{
    ViewData["Title"] = "Yeni İhtar Oluştur";
    Layout = null;
}

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" />
    <style>
        :root {
            --halkbank-blue: #005baa;
            --halkbank-light-blue: #e6f0fa;
            --halkbank-green: #28a745;
            --halkbank-gray: #f0f2f5;
            --halkbank-red: #dc3545;
        }

        body {
            margin: 0;
            font-family: 'Segoe UI', sans-serif;
            background-color: var(--halkbank-gray);
        }

        .top-bar {
            background-color: var(--halkbank-blue);
            color: white;
            padding: 10px 25px;
            display: grid;
            grid-template-columns: 1fr auto 1fr;
            align-items: center;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .top-bar-left, .top-bar-right {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .top-bar-left {
            justify-self: start;
        }

        .top-bar-center {
            justify-self: center;
        }

        .top-bar-right {
            justify-self: end;
        }

        .page-title {
            font-size: 1.25em;
            font-weight: 600;
        }

        .icon-button {
            background: none;
            border: none;
            color: white;
            font-size: 1.5em;
            cursor: pointer;
            text-decoration: none;
        }

        .main-content {
            padding: 25px;
            max-width: 1200px;
            margin: auto;
        }

        .form-container {
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        }

        .form-header {
            background-color: var(--halkbank-blue);
            color: white;
            padding: 15px;
            text-align: center;
            font-size: 1.1em;
            font-weight: 600;
            border-radius: 8px 8px 0 0;
        }

        .form-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
            gap: 20px;
            padding: 25px;
        }

        .form-group {
            margin-bottom: 1rem;
        }

            .form-group label {
                display: block;
                margin-bottom: .5rem;
                font-weight: 500;
                font-size: 0.9em;
            }

            .form-group input, .form-group select {
                width: 100%;
                padding: 10px;
                border: 1px solid #ccc;
                border-radius: 5px;
                box-sizing: border-box;
            }

                .form-group input[readonly] {
                    background-color: #e9ecef;
                    cursor: not-allowed;
                }

        .form-actions {
            text-align: right;
            padding: 20px;
            border-top: 1px solid var(--halkbank-gray);
        }

        .save-button {
            background-color: var(--halkbank-green);
            color: white;
            padding: 12px 30px;
            border-radius: 5px;
            border: none;
            font-weight: 600;
            cursor: pointer;
            font-size: 1em;
        }

        .text-danger {
            color: var(--halkbank-red);
            font-size: 0.875em;
            margin-top: 4px;
            display: block;
            min-height: 1em;
        }
    </style>
</head>
<body>
    <header class="top-bar">
        <div class="top-bar-left">
            <a asp-action="Index" class="icon-button" title="İhtar Listesine Dön"><i class="fas fa-arrow-left"></i></a>
            <h1 class="page-title">Yeni İhtar Oluştur</h1>
        </div>
        <div class="top-bar-center">
            <img src="~/img/halkbank-logo.png" alt="Halkbank Logo" style="height: 45px;" />
        </div>
        <div class="top-bar-right">
            <a asp-action="Login" asp-controller="Account" class="icon-button" title="Çıkış Yap"><i class="fas fa-sign-out-alt"></i></a>
        </div>
    </header>
    <main class="main-content">
        <form asp-action="Create" method="post" class="form-container" onsubmit="return formuDogrulaVeGonder(event)">
            @Html.AntiForgeryToken()
            <div class="form-header">İHTAR EKLE</div>
            <div class="form-grid">
                <div class="form-column">
                    <div class="form-group"><label asp-for="MusteriId"></label><select asp-for="MusteriId" asp-items="ViewBag.Musteriler" class="form-control" id="musteriSelect" onchange="musteriSecildi()"><option value="">Borçlu Seçiniz...</option></select><span id="musteriError" class="text-danger"></span></div>
                    <div class="form-group"><label asp-for="UrunId"></label><select asp-for="UrunId" class="form-control" id="urunSelect" disabled onchange="zorunluAlanDogrula('urunSelect', 'urunError', 'Müşteri ürünü seçimi zorunludur.')"><option value="">Önce Borçlu Seçiniz...</option></select><span id="urunError" class="text-danger"></span></div>
                    <div class="form-group"><label asp-for="NoterAdi"></label><input asp-for="NoterAdi" class="form-control" id="noterAdiInput" readonly /></div>
                    <div class="form-group"><label asp-for="YevmiyeNo"></label><input asp-for="YevmiyeNo" class="form-control" id="yevmiyeNoInput" oninput="yevmiyeNoDogrula()" /><span id="yevmiyeNoError" class="text-danger"></span></div>
                    <div class="form-group"><label asp-for="IhtarTarihi"></label><input asp-for="IhtarTarihi" type="date" class="form-control" value="@Model.IhtarTarihi.ToString("yyyy-MM-dd")" id="ihtarTarihiInput" onchange="zorunluAlanDogrula('ihtarTarihiInput', 'ihtarTarihiError', 'İhtar tarihi zorunludur.')" /><span id="ihtarTarihiError" class="text-danger"></span></div>
                    <div class="form-group"><label asp-for="IhtarnameSuresi"></label><input asp-for="IhtarnameSuresi" type="number" class="form-control" id="ihtarnameSuresiInput" oninput="ihtarnameSuresiDogrula()" /><span id="ihtarnameSuresiError" class="text-danger"></span></div>
                </div>
                <div class="form-column">
                    <div class="form-group"><label asp-for="TebligTarihi"></label><input asp-for="TebligTarihi" type="date" class="form-control" /></div>
                    <div class="form-group"><label asp-for="IhtarTebligGirisTarihi"></label><input asp-for="IhtarTebligGirisTarihi" type="date" class="form-control" /></div>
                    <div class="form-group"><label asp-for="KatTarihi"></label><input asp-for="KatTarihi" type="date" class="form-control" /></div>
                    <div class="form-group"><label asp-for="IhtarnameNakitTutari"></label><input asp-for="IhtarnameNakitTutari" class="form-control" id="nakitTutarInput" oninput="decimalDogrula('nakitTutarInput', 'nakitTutarError', 'Nakit tutarı zorunludur.')" /><span id="nakitTutarError" class="text-danger"></span></div>
                    <div class="form-group"><label asp-for="IhtarnameGayriNakitTutari"></label><input asp-for="IhtarnameGayriNakitTutari" class="form-control" id="gayriNakitTutarInput" oninput="decimalDogrula('gayriNakitTutarInput', 'gayriNakitTutarError', 'Gayri nakit tutarı zorunludur.')" /><span id="gayriNakitTutarError" class="text-danger"></span></div>
                    <div class="form-group"><label asp-for="IhtarNo"></label><input asp-for="IhtarNo" class="form-control" id="ihtarNoInput" oninput="ihtarNoDogrula()" /><span id="ihtarNoError" class="text-danger"></span></div>
                </div>
            </div>
            <div class="form-actions">
                <button type="submit" class="save-button"><i class="fas fa-save"></i> İhtarı Kaydet</button>
            </div>
        </form>
    </main>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const musteriSelect = document.getElementById('musteriSelect');
            musteriSelect.addEventListener('change', musteriSecildi);
        });

        function formuDogrulaVeGonder(event) {
            zorunluAlanDogrula('musteriSelect', 'musteriError', 'Borçlu seçimi zorunludur.');
            zorunluAlanDogrula('urunSelect', 'urunError', 'Müşteri ürünü seçimi zorunludur.');
            yevmiyeNoDogrula();
            zorunluAlanDogrula('ihtarTarihiInput', 'ihtarTarihiError', 'İhtar tarihi zorunludur.');
            ihtarnameSuresiDogrula();
            decimalDogrula('nakitTutarInput', 'nakitTutarError', 'Nakit tutarı zorunludur.');
            decimalDogrula('gayriNakitTutarInput', 'gayriNakitTutarError', 'Gayri nakit tutarı zorunludur.');
            ihtarNoDogrula();

            const form = event.target;
            const errorSpans = form.querySelectorAll('.text-danger');
            let formGecerli = true;
            errorSpans.forEach(span => {
                if (span.textContent.trim() !== '') {
                    formGecerli = false;
                }
            });

            if (!formGecerli) {
                event.preventDefault();
                alert('Lütfen formdaki kırmızı ile belirtilen zorunlu veya hatalı alanları düzeltin.');
                return false;
            } else {
                gonderimButonunuKilitle(form);
                return true;
            }
        }

        function gonderimButonunuKilitle(formElement) {
            const button = formElement.querySelector('button[type="submit"]');
            if (button) {
                button.disabled = true;
                button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Kaydediliyor...';
            }
        }

        function musteriSecildi() {
            zorunluAlanDogrula('musteriSelect', 'musteriError', 'Borçlu seçimi zorunludur.');
            const musteriSelect = document.getElementById('musteriSelect');
            const urunSelect = document.getElementById('urunSelect');
            const noterAdiInput = document.getElementById('noterAdiInput');
            const musteriId = musteriSelect.value;
            urunSelect.innerHTML = '<option value="">Yükleniyor...</option>';
            urunSelect.disabled = true;
            noterAdiInput.value = '';
            if (!musteriId) {
                urunSelect.innerHTML = '<option value="">Önce Borçlu Seçiniz...</option>';
                return;
            }
            fetch(`/Ihtar/GetUrunlerByMusteriId?musteriId=${musteriId}`).then(response => response.json()).then(data => {
                urunSelect.innerHTML = '<option value="">Ürün Seçiniz...</option>';
                data.forEach(urun => { urunSelect.add(new Option(urun.urunAdi, urun.id)); });
                urunSelect.disabled = false;
            }).catch(error => console.error('Ürünler yüklenirken hata oluştu:', error));
            fetch(`/Ihtar/GetMusteriInfo?musteriId=${musteriId}`).then(response => response.json()).then(data => {
                if (data && data.noterAdi) { noterAdiInput.value = data.noterAdi; }
            }).catch(error => console.error('Noter bilgisi alınırken hata oluştu:', error));
        }

        function zorunluAlanDogrula(inputId, errorId, mesaj) {
            const input = document.getElementById(inputId);
            const error = document.getElementById(errorId);
            if (!input.value) { error.textContent = mesaj; } else { error.textContent = ''; }
        }

        function yevmiyeNoDogrula() {
            const input = document.getElementById('yevmiyeNoInput');
            const error = document.getElementById('yevmiyeNoError');
            let message = '';
            if (input.value) {
                if (!/^[0-9]*$/.test(input.value)) { message = 'Sadece rakam girilmelidir.'; }
                else if (input.value.length > 10) { message = 'Yevmiye No en fazla 10 karakter olabilir.'; }
            }
            error.textContent = message;
        }

        function ihtarnameSuresiDogrula() {
            const input = document.getElementById('ihtarnameSuresiInput');
            const error = document.getElementById('ihtarnameSuresiError');
            const value = parseInt(input.value, 10);
            let message = '';
            if (!input.value) {
                message = 'İhtarname süresi zorunludur.';
            } else if (isNaN(value) || value < 1 || value > 365) {
                message = 'Süre 1-365 gün arasında olmalıdır.';
            }
            error.textContent = message;
        }

        function decimalDogrula(inputId, errorId, mesaj) {
            const input = document.getElementById(inputId);
            const error = document.getElementById(errorId);
            let message = '';
            if (!input.value) {
                message = mesaj;
            } else if (!/^[0-9]+([,\.][0-9]{1,2})?$/.test(input.value)) {
                message = 'Lütfen geçerli bir sayı giriniz (örn: 1234,56).';
            }
            error.textContent = message;
        }

        function ihtarNoDogrula() {
            const input = document.getElementById('ihtarNoInput');
            const error = document.getElementById('ihtarNoError');
            let message = '';
            if (!input.value) {
                message = 'İhtar no zorunludur.';
            } else if (!/^[0-9]*$/.test(input.value)) {
                message = 'Sadece rakam girilmelidir.';
            } else if (input.value.length !== 8) {
                message = 'İhtar No 8 haneli olmalıdır.';
            }
            error.textContent = message;
        }
    </script>
</body>
</html>
